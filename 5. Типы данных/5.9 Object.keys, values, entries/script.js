//Задача 1. Сумма свойств объекта
/*Есть объект salaries с произвольным количеством свойств, содержащих заработные платы.
Напишите функцию sumSalaries(salaries), которая возвращает сумму всех зарплат с помощью 
метода Object.values и цикла for..of.
Если объект salaries пуст, то результат должен быть 0.
Например:
let salaries = {
  "John": 100,
  "Pete": 300,
  "Mary": 250
};
alert( sumSalaries(salaries) ); // 650*/
{
	function sumSalaries(salaries) {
		let result = 0;
		for (let element of Object.values(salaries)) {
			result += element;
		}
		return result;
	}
	let salaries = {
		"John": 100,
		"Pete": 300,
		"Mary": 250
	}

	alert(sumSalaries(salaries));
}

//Задача 2. Подсчёт количества свойств объекта
/*Напишите функцию count(obj), которая возвращает количество свойств объекта:
let user = {
  name: 'John',
  age: 30
};
alert( count(user) ); // 2
Постарайтесь сделать код как можно короче.
P.S. Игнорируйте символьные свойства, подсчитывайте только «обычные».*/
{
	function count(obj) {
		return Object.keys(obj).length;
	}
	let user = {
		name: 'John',
		age: 30
	}

	alert(count(user));
}


//Задача 3. Какие значения выведет цикл for?
//Для каждого цикла запишите, какие значения он выведет.
//Оба цикла выведут alert с одинаковыми значениями или нет?
//1. Префиксный вариант:
{
	for(let i = 0; i < 5; i++) alert(i); //результат: 0 1 2 3 4
}
//2. Постфиксный вариант
{
	for(let i = 0; i < 5; ++i) alert(i); //результат: 0 1 2 3 4
}

//Задача 4. Выведите чётные числа
//При помощи цикла for выведите чётные числа от 2 до 10.
{
	for(let i = 2; i < 11; i++) {
		if (i % 2 == 0) {
			alert(i);
		}
	}
}

//Задача 5. Замените for на while
/*Перепишите код, заменив цикл for на while, 
без изменения поведения цикла.
for (let i = 0; i < 3; i++) {
  alert( `number ${i}!` );
}*/
{
	let i = 0;
	while(i < 3) {
		alert(`number ${i}!`);
		i += 1;
	}
}

//Задача 6. Повторять цикл, пока ввод неверен
/*Напишите цикл, который предлагает prompt ввести число, 
большее 100. Если посетитель ввёл другое число – попросить
ввести ещё раз, и так далее.
Цикл должен спрашивать число пока либо посетитель не введёт 
число, большее 100, либо не нажмёт кнопку Отмена (ESC).
Предполагается, что посетитель вводит только числа. Предусматривать 
обработку нечисловых строк в этой задаче необязательно.*/
{
	while(true) {
		let number = prompt('Введите число больше 100', '');
		if ((number > 100) || (number === null)) {
			break;
		}
	}
}

//Задача 7. Вывести простые числа
/*Натуральное число, большее 1, называется простым, если оно
ни на что не делится, кроме себя и 1. Другими словами, n > 1 – простое,
если при его делении на любое число кроме 1 и n есть остаток.
Например, 5 это простое число, оно не может быть разделено 
без остатка на 2, 3 и 4.
Напишите код, который выводит все простые числа из интервала 
от 2 до n. 
Для n = 10 результат должен быть 2,3,5,7.
P.S. Код также должен легко модифицироваться для любых других интервалов.*/
{
	let n = prompt('Введите число', '');
	marker:
	for (let i = 2; i <= n; i++) {
		for (let j = 2; j < i; j++) {
			if (i % j == 0) {
				continue marker;
			}
		}
		alert(i);
	}
}