//Задача 1. Скопирован ли массив?
//Что выведет следующий код?
{
	let fruits = ["Яблоки", "Груша", "Апельсин"];

	// добавляем новое значение в "копию"
	let shoppingCart = fruits;
	shoppingCart.push("Банан");

	// что в fruits?
	alert( fruits.length ); //результат 4. Массивы являются объектами, а значит переменные 
	//хранят лишь ссылки на них.
}

//Задача 2. Операции с массивами
/*Давайте произведём 5 операций с массивом.
1.Создайте массив styles с элементами «Джаз» и «Блюз».
2.Добавьте «Рок-н-ролл» в конец.
3.Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен 
работать для массивов с любой длиной.
4.Удалите первый элемент массива и покажите его.
5.Вставьте Рэп и Регги в начало массива.
Массив по ходу выполнения операций:
Джаз, Блюз
Джаз, Блюз, Рок-н-ролл
Джаз, Классика, Рок-н-ролл
Классика, Рок-н-ролл
Рэп, Регги, Классика, Рок-н-ролл*/
{
	let styles = ["Джаз", "Блюз"];
	styles.push("Рок-н-ролл");
	styles[Math.floor((styles.length - 1) / 2)] = "Классика";
	alert( styles.shift() );
	styles.unshift("Рэп", "Регги");
}

//Задача 3. Вызов в контексте массива
//Каков результат? Почему?
{
	let arr = ["a", "b"];
	arr.push(function() {
		alert( this );
	});
	arr[2](); //результат: a,b,function(){}. По аналогии с объектами
}

//Задача 4. Сумма введённых чисел
/*Напишите функцию sumInput(), которая:
Просит пользователя ввести значения, используя prompt и сохраняет их в массив.
Заканчивает запрашивать значения, когда пользователь введёт не числовое значение, 
пустую строку или нажмёт «Отмена».
Подсчитывает и возвращает сумму элементов массива.
P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».*/
{
	function sumInput() {
		let arr = [];
		while (true) {
			let value = prompt('Введите значение', '');
			if (value === null || value === "" || !isFinite(value)) break;
			arr.push(+value);
		}
		let sum = 0;
		for (let element of arr) {
			sum += element;
		}
		return sum;
	}
	alert(sumInput());
}

//Задача 5. Подмассив наибольшей суммы
/*
На входе массив чисел, например: arr = [1, -2, 3, 4, -9, 6].
Задача: найти непрерывный подмассив в arr, сумма элементов в котором максимальна.
Функция getMaxSubSum(arr) должна возвращать эту сумму.
Например:
getMaxSubSum([-1, 2, 3, -9]) == 5 (сумма выделенных элементов)
getMaxSubSum([2, -1, 2, 3, -9]) == 6
getMaxSubSum([-1, 2, 3, -9, 11]) == 11
getMaxSubSum([-2, -1, 1, 2]) == 3
getMaxSubSum([100, -9, 2, -3, 5]) == 100
getMaxSubSum([1, 2, 3]) == 6 (берём все)
Если все элементы отрицательные – ничего не берём(подмассив пустой) и сумма равна «0»:
getMaxSubSum([-1, -2, -3]) = 0
Попробуйте придумать быстрое решение: O(n2), а лучше за О(n) операций.*/
{
	function getMaxSubSum(arr) {
		let sum = 0;
		for (let i = 0; i < arr.length; i++) {
			let start = 0;
			for (let j = i; j < arr.length; j++) {
				start += arr[j];
				sum = Math.max(sum, start);
			}
		}
		return sum;
	}

	alert(getMaxSubSum([-1, 2, 3, -9]));
	alert(getMaxSubSum([-1, 2, 3, -9, 11]));
	alert(getMaxSubSum([-2, -1, 1, 2]));
	alert(getMaxSubSum([1, 2, 3]));
	alert(getMaxSubSum([100, -9, 2, -3, 5]));
}